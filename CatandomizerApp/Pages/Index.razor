@page "/"
@inject HttpClient Http

<PageTitle>Catandomizer</PageTitle>

<p>Build a random (valid) layout for Catan.</p>
<p>
  <input placeholder="Layout Id" @bind="Id" />
  <button @onclick="Recalculate">Recalculate</button>
</p>

@if (boardState is null || boardState.LandSpaces is null || boardSpaces is null || harborSpaces is null)
{
  <p><em>Loading...</em></p>
}
else
{
  <div>
    <div style="position:relative; top: 0px; left: 304.5px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[9].Image /></div>
    </div>

    <div style="position:relative; top: 58.5px; left: 203.5px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[10].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@harborSpaces[8].Image /></div>
    </div>

    <div style="position:relative; top: 117px; left: 101.5px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[11].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[6].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[6].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@harborSpaces[7].Image /></div>
    </div>

    <div style="position:relative; top: 175.5px; left: 0px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[12].Image /></div>
      <div style=" position: absolute; left: 203px"><img src=@boardSpaces[7].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[7].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[5].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[5].Value</div>
      </div>
      <div style="position: absolute; left: 608px"><img src=@harborSpaces[6].Image /></div>
    </div>

    <div style="position:relative; top: 234px; left: 101.5px">
      <div style="position: absolute; left: 0px"><img src=@boardSpaces[8].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[8].Value</div>
      </div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[15].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[15].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[4].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[4].Value</div>
      </div>
    </div>

    <div style="position:relative; top: 292.5px; left: 0px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[13].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[16].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[16].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[14].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[14].Value</div>
      </div>
      <div style="position: absolute; left: 608px"><img src=@harborSpaces[5].Image /></div>
    </div>

    <div style="position:relative; top: 351px; left: 101.5px">
      <div style="position: absolute; left: 0px"><img src=@boardSpaces[9].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[9].Value</div>
      </div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[18].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[18].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[3].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[3].Value</div>
      </div>
    </div>

    <div style="position:relative; top: 409.5px; left: 0px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[14].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[17].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[17].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[13].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[13].Value</div>
      </div>
      <div style="position: absolute; left: 608px"><img src=@harborSpaces[4].Image /></div>
    </div>

    <div style="position:relative; top: 468px; left: 101.5px">
      <div style="position: absolute; left: 0px"><img src=@boardSpaces[10].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[10].Value</div>
      </div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[12].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[12].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[2].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[2].Value</div>
      </div>
    </div>

    <div style="position:relative; top: 526.5px; left: 0px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[15].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@boardSpaces[11].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[11].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@boardSpaces[1].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[1].Value</div>
      </div>
      <div style="position: absolute; left: 608px"><img src=@harborSpaces[3].Image /></div>
    </div>

    <div style="position:relative; top: 585px; left: 101.5px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[16].Image /></div>
      <div style="position: absolute; left:203px"><img src=@boardSpaces[0].Image />
        <div style="position: relative; top: -71px; text-align: center">@boardSpaces[0].Value</div>
      </div>
      <div style="position: absolute; left: 406px"><img src=@harborSpaces[2].Image /></div>
    </div>

    <div style="position:relative; top: 643.5px; left: 203px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[17].Image /></div>
      <div style="position: absolute; left: 203px"><img src=@harborSpaces[1].Image /></div>
    </div>

    <div style="position:relative; top: 702px; left: 304.5px">
      <div style="position: absolute; left: 0px"><img src=@harborSpaces[0].Image /></div>
    </div>
  </div>
  <div style="position: relative">ID = @boardState.Id</div>
}

@code {
  private BoardState? boardState;
  private BoardSpace[]? boardSpaces;
  private HarborSpace[]? harborSpaces;

  private const string c_padding = "padding: 15px;";
  private const string c_border = "border: 5px solid";

  private string? Id;

  private const string c_mountainStyle = $"{c_padding} {c_border} #a7a297";
  private const string c_hillStyle = $"{c_padding} {c_border} #e90f0f";
  private const string c_forestStyle = $"{c_padding} {c_border} #195d16";
  private const string c_fieldStyle = $"{c_padding} {c_border} #e9d75d";
  private const string c_pastureStyle = $"{c_padding} {c_border} #7fe17b";
  private const string c_desertStyle = $"{c_padding} {c_border} #9e7213";
  private const string c_emptyStyle = $"{c_padding} #ffffff";

  private async Task Recalculate()
  {
    boardSpaces = null;
    boardState = null;

    // Local testing:
    // var servicePath = "http://localhost:5149/getboard";

    var servicePath = "https://catandomizerservice.azurewebsites.net/getboard";

    if (Id is not null)
      servicePath += $"/{Id}";

    boardState = await Http.GetFromJsonAsync<BoardState>(servicePath);
    boardSpaces = boardState!.LandSpaces!.Select(x => new BoardSpace(x)).ToArray();
    harborSpaces = boardState!.WaterSpaces!.Select(x => new HarborSpace(x)).ToArray();
  }

  protected override async Task OnInitializedAsync()
  {
    await Recalculate();
  }

  public class BoardState
  {
    public LandSpace[]? LandSpaces { get; set; }

    public WaterSpace[]? WaterSpaces { get; set; }

    public int Id { get; set; }
  }

  public class LandSpace
  {
    public string? Type { get; set; }
    public int? Value { get; set; }
  }

  public class WaterSpace
  {
    public string? Type { get; set; }
  }

  public class BoardSpace
  {
    public BoardSpace(LandSpace landSpace)
    {
      Image = landSpace.Type switch
      {
        "Mountain" => "assets/Mountain.png",
        "Hill" => "assets/Hill.png",
        "Forest" => "assets/Forest.png",
        "Field" => "assets/Field.png",
        "Pasture" => "assets/Pasture.png",
        "Desert" => "assets/Desert.png",
        _ => throw new NotSupportedException()
      };
      Value = landSpace?.Value;
    }

    public int? Value { get; }

    public string Image { get; }
  }

  public class HarborSpace
  {
    public HarborSpace(WaterSpace waterSpace)
    {
      Image = waterSpace.Type switch
      {
        "Mountain" => "assets/MountainHarbor.png",
        "Hill" => "assets/HillHarbor.png",
        "Forest" => "assets/ForestHarbor.png",
        "Field" => "assets/FieldHarbor.png",
        "Pasture" => "assets/PastureHarbor.png",
        "Generic" => "assets/GenericHarbor.png",
        null => "assets/NoHarbor.png",
        _ => throw new NotSupportedException()
      };
    }

    public string Image { get; }
  }
}
